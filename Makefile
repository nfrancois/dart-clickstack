# ClickStack plugin makefile
#
# = Variables
#
# Below is a list of variables that you can define for the ClickStack plugin.
#
# Sample values are provided by default. When you configure your plugin,
# replace these values with something appropriate.
#
# == plugin_name (required)
#
# The plugin name is used to generate the plugin zip package, which is
# is used by the genapp agent during application setup. By convention, the
# name ends with "-plugin". Examples include java-plugin, play2-plugin,
# tomcat7-plugin, etc.
#
plugin_version = 1.0
plugin_name = dart-plugin-${plugin_version}


# ClickStack plugins are published to S3. The publish_bucket is used to
# specify the S3 bucket to publish to.

publish_bucket = dart-clickstack

# == publish_repo
#
# By convention, ClickStack plugins are published to an S3 bucket under a
# "repository" directory. This lets you target different releases for a
# plugin. Examples include testing, core, community, etc.

publish_repo = testing

# == publish_url
#
# The publish_url is constructed using the publish_bucket and publish_repo
# variables above. You may however specify an alternative scheme.

publish_url = s3://$(publish_bucket)/$(publish_repo)/

# == deps
#
# Deps is a list of dependencies requirec by the plugin. Each value in deps
# must match a makefile target specified below, which is responsible for
# resolving the dependency.
#
# The example specifies a ficticious "library" file that is generated by
# the matching target below. Replace this example with any external libraries
# or other dependencies used by the plugin. Otherwise this value may be
# left blank.

deps = 

# == pkg_files (required)
#
# pkg_files specifies the top most files and directories that should be
# included in the plugin zip package. All package files are copied to the
# pkg directory, which is in turn packaged as a zip file for publishing.
# Directories that are specified in pkg_files are always copied recursively
# in their entirety.

pkg_files = README.md LICENSE setup functions control

# = Core makefile support
#
# The core makefile support should be included here, after the variables
# above are defined.

include plugin.mk

# = Dependency targets
#
# Each value listed in deps above must have a maching target below, which
# is used to resolve the dependency.
#
# The example generates an empty file to resolve a ficticious dependency,
# which is used as the example above for deps.

lib/fake.lib:
	mkdir -p lib
	touch lib/fake.lib
